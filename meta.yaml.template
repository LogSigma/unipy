package:
  name: {package_name}
  version: {package_version}

source:
  fn: {package_source}
  url: {package_url}
  md5: b03a1ff8dff70fd397d11ed16a0f7c87
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch: python
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - unipy = unipy:main
    #
    # Would create an entry point called unipy that calls unipy.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:{required_on_build}

  run:{required_on_run}

test:
  # Python imports
  imports:
    - unipy
    - unipy.core
    - unipy.dataset
    - unipy.image
    - unipy.math
    - unipy.plot
    - unipy.stats
    - unipy.tests
    - unipy.tools
    - unipy.util

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: {doc_url}
  license: {license_str}
  summary: {short_desc}
  license_family: {license_family_str}

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml

