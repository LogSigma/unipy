package:
  name: unipy
  version: "0.0.2.52"

source:
  fn: unipy-0.0.2.52.tar.gz
  url: https://pypi.python.org/packages/b0/a9/f369b8a5e63d3979938fddf0503d7fd2cca17c2768f79a07688ba90c05d5/unipy-0.0.2.52.tar.gz
  md5: be5f1380fefb24c8af348b5e58e7dd67
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch: python
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - unipy = unipy:main
    #
    # Would create an entry point called unipy that calls unipy.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pandas >=0.20.2
    - numpy ==1.12.1,<1.13.1
    - scipy >=0.19.0
    - scikit-learn >=0.18.0
    - statsmodels >=0.8.0
    - matplotlib >=2.0.2
    - paramiko >=2.1.2

  run:
    - python
    - pandas >=0.20.2
    - numpy ==1.12.1,<1.13.1
    - scipy >=0.19.0
    - scikit-learn >=0.18.0
    - statsmodels >=0.8.0
    - matplotlib >=2.0.2
    - paramiko >=2.1.2

test:
  # Python imports
  imports:
    - unipy
    - unipy.core
    - unipy.dataset
    - unipy.image
    - unipy.math
    - unipy.plot
    - unipy.stats
    - unipy.tests
    - unipy.tools
    - unipy.util

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://github.com/pydemia/unipy
  license: MIT License
  summary: 'Useful tools for Data Scientists'
  license_family: MIT

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
